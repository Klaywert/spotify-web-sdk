version: 2
jobs:
    config:
        docker:
            - image: circleci/node:8.9

        working_directory: ~/repo

        steps:
            - checkout
            - restore_cache:
                  keys:
                      - v1-dependencies-{{ checksum "package.json" }}
                      - v1-dependencies-

            - run: yarn install
            - save_cache:
                  paths:
                      - node_modules
                  key: v1-dependencies-{{ checksum "package.json" }}
    build:
        docker:
            - image: circleci/node:8.9

        working_directory: ~/repo

        steps:
            - checkout
            - restore_cache:
                  keys:
                      - v1-dependencies-{{ checksum "package.json" }}
                      - v1-dependencies-

            - run:
                  name: Building project
                  command: yarn build
            - persist_to_workspace:
                  root: ~/repo
                  paths: .

    test:
        docker:
            - image: circleci/node:8.9

        working_directory: ~/repo

        steps:
            - checkout
            - restore_cache:
                  keys:
                      - v1-dependencies-{{ checksum "package.json" }}
                      - v1-dependencies-
            - run:
                  name: Lint
                  command: yarn lint
            - run:
                  name: Testing
                  command: yarn test
    deploy:
        docker:
            - image: circleci/node:8.9

        working_directory: ~/repo
        steps:
            - attach_workspace:
                  at: ~/repo
            - run:
                  name: Authenticate with registry
                  command: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > ~/repo/.npmrc
            - run:
                  name: Publish package
                  command: npm publish

workflows:
    version: 2
    build_test_deploy:
        jobs:
            - config
            - build:
                  requires:
                      - config
            - test:
                  requires:
                      - config
                  filters:
                      tags:
                          ignore: /.*/
            - deploy:
                  requires:
                      - build
                  filters:
                      tags:
                          only: /.*/
                      branches:
                          ignore: /.*/
